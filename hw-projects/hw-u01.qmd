---
title: "Homework U01: Who will stay together and who will call it splits?"
author: "Derek Powell"
bibliography: ../references.bib
editor: source
---

::: {.callout-caution icon="false"}
## Learning Objectives

Our learning objectives for this homework are:

- Apply the fundamental machine learning workflow from start to finish
- Use data munging skills to conduct feature engineering for machine learning
- Gain hands-on experience with building and applying logistic regression models
- Use model visualizations to gain insight into the dynamics of romantic relationships
:::

```{r}
#| message: false
library(tidyverse)
library(tidymodels)

hcmst <- read_csv("data/hcmst.csv") %>% 
  filter(w1_q21b_year < 2018)

```
Relationships are important!

![](../imgs/ambiguous-couple.jpeg)

Romantic relationships are central to human experience, offering deep connections, companionship, and love. Romantic relationships play a pivotal role in shaping our emotional well-being and overall life satisfaction From the exhilarating rush of falling in love to the profound impact of a break-up, the dynamic emotions, thoughts, and behaviors that characterize romantic relationships hold profound importance in people's lives, significantly influencing their overall happiness and well-being.

Research consistently shows that individuals in satisfying romantic partnerships report higher levels of life satisfaction, mental health, and physical well-being.

However, romantic relationships are not without their challenges. Break-ups, or the dissolution of romantic relationships are major life stressors that can have profound impacts on an individual's psychological and emotional state. Break-ups can lead to feelings of grief, sadness, anger, and even physical symptoms, akin to mourning the loss of a loved one.

For many people, finding and maintaining healthy romantic relationships is an essential component of their overall life fulfillment and emotional stability. So what kinds of romantic relationships remain successful? If a break-up is imminent, can it be forseen?

**In this homework, we will use machine learning to predict whether couples will remain together in 2020 based on demographic and survey information collected in 2017.**

## The data

The data for this homework comes from Stanford University's [How Couples Meet and Stay Together (HCMST) study](https://data.stanford.edu/hcmst2017). This survey features a set of 3,510 survey respondents first surveyed in 2017, who were then followed up with in 2020 (2,107 subjects) and in 2022 (1,722) subjects. We will focus on the participants who were involved in a romantic relationship in 2017 and who responded again to questions in 2020.


## Exercise 1

We want to predict which couples will stay together and which will break up. First, let's see how many breakups we have in our dataset.

::: {.callout-note icon="false"}
## Exercise 1

First, load the data from `data/hcmst.csv`. Then, examine the balance of the classes (0 = broken up, 1 = together) coded by the `w2_brokeup` variable.
:::

## Exercise 2

Before we make a model, let's do some more exploratory data analysis. One variable that seems likely to be highly predictive of whether couples break up is relationship quality. This quality measure is reverse-coded, as shown in the codebook entry below (note: it has been renamed for clarity).

![](../imgs/hcmst-rel-qual-code.png)

::: {.callout-note icon="false"}
## Exercise 2

Make a plot of the **proportion** of couples who broke up by relationship quality. Then, make a plot of the **number** of couples who broke up, plotted by relationship quality. Compare and interpret the two plots. Briefly discuss what this might mean for our ability to predict breakups from just this variable.
:::


## Exercise 3

Let's zoom back out and look at all the variables present in the dataset. A few notes on the variable name formatting:

-   `id` indicates respondent id number
-   `w1_` indicates wave 1 (2017); `w2_` indicates wave 2 (2020)
-   `*_p_` indicates a value for the respondent's partner (otherwise, for the respondent)

```{r}
glimpse(hcmst)
```

All of these (except `id` and `w2_brokeup`) are variables we might use as **features** in our model. To make sure they are used appropriately, we need to pay attention to the type of feature they are. 

Some of these features are **continuous** (or at least ordered) and some are categorical (or **discrete**). Look through the list of variables and think about which might be continuous, at least in principle. Then complete the exercise below. 

::: {.callout-note icon="false"}
## Exercise 3

Modify the `hcmst` dataset to translate discrete, cateogrical predictors into `factors` and keep continuous variables left as `numeric`. Expand the hint below to see which variables should be kept `numeric`.

::: {.callout-note icon="false" collapse="true"}
## Hint
Continuous variables: `w1_age`, `w1_p_age`, `w1_yrsed`, `w1_p_yrsed`, `w1_q21b_year`, `w1_rel_qual`, `w1_sex_frequency`, `w1_polparty`, `w1_p_polparty`, `w1_fam_seen_monthly`, `w1_hh_income`, `w2_shelter_combo_months`
:::
:::

::: callout-important
This is a good place to save your notebook, render it, and confirm that it looks as you expect.
:::



## Exercise 4

Now we can begin our machine-learning workflow!

::: {.callout-note icon="false"}
## Exercise 4

Split the data into training (80%) and testing (20%) splits. Since we won't use it for prediction, drop the `id` column before making these splits. Make sure to stratify the train/test splits by our outcome to ensure a representative class balance for our predictions. Call your training and testing splits `train` and `test`
:::


## Exercise 5

::: {.callout-note icon="false"}
## Exercise 5

We will build several models and we'll use k-fold cross-validation to compare them. Set up cross validation with 10 folds. Remember, `tidymodels` calls this "v-fold cross validation".
:::

## Exercise 6

Let's start building our first model. Our first model will use all the available features from Wave 1 (2017) to predict breakups in Wave 2 (2020).

::: {.callout-note icon="false"}
## Exercise 6

Build a workflow to train a logistic regression model. As part of the workflow, create a recipe that selects only the Wave 1 features as predictors.
:::

::: callout-important
This is a good place to save your notebook, render it, and confirm that it looks as you expect.
:::

## Exercise 7

Now let's fit our model in our cross-validation folds and evaluate its performance.

::: {.callout-note icon="false"}
## Exercise 7

Fit the model to the 10 cross-validation folds and examine its performance with the `collect_metrics()` function.
:::


## Exercise 8

Consider what you should make of the accuracy score you observe in light of the balance of broken-up and together couples you calculated in Exercise 1. 

::: {.callout-note icon="false"}
## Exercise 8

Calculate the expected accuracy of a "classifier" that operates by guessing based on the overall probability of break-ups. How does such a "null" model compare to our model in terms of accuracy?
:::

## Exercise 9

To better evaluate our model, we need to employ a metric other than simple accuracy. One option for evaluating classifiers in cases with unbalanced outcome classes is **Balanced Accuracy**. 

Balanced accuracy is the average of the model's true positive rate (TPR) and its true negative rate (TNR). Unlike simple accuracy, it is "balanced" because it gives equal weight to positive and negative cases.

::: {.callout-note icon="false"}
## Exercise 9

Retrain the model passing `metric_set(accuracy, bal_accuracy)` to the `metrics` argument of `fit_resamples` to calculate accuracy and balanced accuracy.

What kind of balanced accuracy could we expect from our "null" classifier? How does this compare?
:::

## Exercise 10

Finally, let's close by training a final model and testing its performance on the test set. Typically, we would train multiple models and pick the best based on its cross validation performance. But here, let's consider our ability to predict to future cases with our one model.

::: {.callout-note icon="false"}
## Exercise 10

Retrain the model on the full training data set. Then, use the final model to generate predictions for the testing data.
:::

## Exercise 11

::: {.callout-note icon="false"}
## Exercise 11

Using these predictions and the true observed values, calculate the final model's accuracy, true positive rate, true negative rate, and balanced accuracy on the testing set. 

If the model predicts a couple will breakup, what is the expected probability that they actually do? If we compare two couples, one the model predicts will break up and another it predicts will stay together, how many times more likely should we believe it is that couple predicted to break up will do so?


:::

## Exercise 12
::: {.callout-note icon="false"}
## Exercise 12

Having made these calculations, consider what sort of usefulness the model might have, given its predictive performance. Are there applications where it might be put to use (for good or ill)? Write a paragraph or so on your thoughts.

:::


# Wrapping up

When you are finished, knit your Quarto document to a PDF file.

::: {.callout-important icon="false"}
**MAKE SURE YOU LOOK OVER THIS FILE CAREFULLY BEFORE SUBMITTING**
:::

When you are sure it looks good, submit it on Canvas in the appropriate assignment page.
